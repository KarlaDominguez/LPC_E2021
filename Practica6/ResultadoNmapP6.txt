Starting Nmap 7.91 ( https://nmap.org ) at 2021-04-22 14:18 Hora de verano central (México)

NSE: Loaded 153 scripts for scanning.

NSE: Script Pre-scanning.

Initiating NSE at 14:18

Completed NSE at 14:18, 0.00s elapsed

Initiating NSE at 14:18

Completed NSE at 14:18, 0.00s elapsed

Initiating NSE at 14:18

Completed NSE at 14:18, 0.00s elapsed

Initiating Ping Scan at 14:18

Scanning 189.224.104.189 [4 ports]

Completed Ping Scan at 14:18, 0.08s elapsed (1 total hosts)

Initiating Parallel DNS resolution of 1 host. at 14:18

Completed Parallel DNS resolution of 1 host. at 14:18, 0.01s elapsed

Initiating SYN Stealth Scan at 14:18

Scanning dsl-189-224-104-189-dyn.prod-infinitum.com.mx (189.224.104.189) [1000 ports]

Discovered open port 80/tcp on 189.224.104.189

Discovered open port 53/tcp on 189.224.104.189

Completed SYN Stealth Scan at 14:18, 2.43s elapsed (1000 total ports)

Initiating Service scan at 14:18

Scanning 2 services on dsl-189-224-104-189-dyn.prod-infinitum.com.mx (189.224.104.189)

Completed Service scan at 14:19, 19.46s elapsed (2 services on 1 host)

Initiating OS detection (try #1) against dsl-189-224-104-189-dyn.prod-infinitum.com.mx (189.224.104.189)

Initiating Traceroute at 14:19

Completed Traceroute at 14:19, 0.03s elapsed

NSE: Script scanning 189.224.104.189.

Initiating NSE at 14:19

Completed NSE at 14:19, 12.64s elapsed

Initiating NSE at 14:19

Completed NSE at 14:19, 0.60s elapsed

Initiating NSE at 14:19

Completed NSE at 14:19, 0.00s elapsed

Nmap scan report for dsl-189-224-104-189-dyn.prod-infinitum.com.mx (189.224.104.189)

Host is up (0.0037s latency).

Not shown: 994 closed ports

PORT     STATE    SERVICE      VERSION

21/tcp   filtered ftp

22/tcp   filtered ssh

23/tcp   filtered telnet

53/tcp   open     domain       Unbound

80/tcp   open     ssl/http

| fingerprint-strings: 

|   FourOhFourRequest, GetRequest: 

|     HTTP/1.1 400 Bad Request

|     Connection: Keep-Alive

|   HTTPOptions, RTSPRequest, SIPOptions: 

|     HTTP/1.1 404 Not Found

|     Content-Type:text/html

|     Pragma:no-cache

|     Cache-control:no-cache, no-store, max-age=0

|     Transfer-Encoding:chunked

|     X-Frame-Options:SAMEORIGIN

|     Connection:Keep-Alive

|_    requested URL was not found on this server.

| http-methods: 

|_  Supported Methods: GET POST

|_http-title: Site doesn't have a title (text/html).

| ssl-cert: Subject: commonName=Huawei Technologies Co., Ltd/organizationName=Huawei Technologies Co., Ltd/stateOrProvinceName=Guangdong/countryName=CN

| Issuer: commonName=Huawei Technologies Co., Ltd/organizationName=Huawei Technologies Co., Ltd/stateOrProvinceName=Guangdong/countryName=CN

| Public Key type: rsa

| Public Key bits: 2048

| Signature Algorithm: sha256WithRSAEncryption

| Not valid before: 2014-12-05T10:33:44

| Not valid after:  2024-12-04T10:33:44

| MD5:   67e9 299f 4c54 6c23 cd0e 97ec cee1 f7d0

|_SHA-1: 80a2 8e9e 1ac0 6b24 f2cf 9ecd 65bf f523 0da3 110e

|_ssl-date: TLS randomness does not represent time

8090/tcp filtered opsmessaging

1 service unrecognized despite returning data. If you know the service/version, please submit the following fingerprint at https://nmap.org/cgi-bin/submit.cgi?new-service :

SF-Port80-TCP:V=7.91%T=SSL%I=7%D=4/24%Time=60846F2B%P=i686-pc-windows-wind

SF:ows%r(GetRequest,39,"HTTP/1\.1\x20400\x20Bad\x20Request\r\nConnection:\

SF:x20Keep-Alive\r\n\r\n0\r\n\r\n")%r(HTTPOptions,F8,"HTTP/1\.1\x20404\x20

SF:Not\x20Found\r\nContent-Type:text/html\r\nPragma:no-cache\r\nCache-cont

SF:rol:no-cache,\x20no-store,\x20max-age=0\r\nTransfer-Encoding:chunked\r\

SF:nX-Frame-Options:SAMEORIGIN\r\nConnection:Keep-Alive\r\n\r\n2f\r\nThe\x

SF:20requested\x20URL\x20was\x20not\x20found\x20on\x20this\x20server\.\r\n

SF:0\r\n\r\n")%r(RTSPRequest,F8,"HTTP/1\.1\x20404\x20Not\x20Found\r\nConte

SF:nt-Type:text/html\r\nPragma:no-cache\r\nCache-control:no-cache,\x20no-s

SF:tore,\x20max-age=0\r\nTransfer-Encoding:chunked\r\nX-Frame-Options:SAME

SF:ORIGIN\r\nConnection:Keep-Alive\r\n\r\n2f\r\nThe\x20requested\x20URL\x2

SF:0was\x20not\x20found\x20on\x20this\x20server\.\r\n0\r\n\r\n")%r(FourOhF

SF:ourRequest,39,"HTTP/1\.1\x20400\x20Bad\x20Request\r\nConnection:\x20Kee

SF:p-Alive\r\n\r\n0\r\n\r\n")%r(SIPOptions,F8,"HTTP/1\.1\x20404\x20Not\x20

SF:Found\r\nContent-Type:text/html\r\nPragma:no-cache\r\nCache-control:no-

SF:cache,\x20no-store,\x20max-age=0\r\nTransfer-Encoding:chunked\r\nX-Fram

SF:e-Options:SAMEORIGIN\r\nConnection:Keep-Alive\r\n\r\n2f\r\nThe\x20reque

SF:sted\x20URL\x20was\x20not\x20found\x20on\x20this\x20server\.\r\n0\r\n\r

SF:\n");

Device type: general purpose

Running: Linux 3.X

OS CPE: cpe:/o:linux:linux_kernel:3.5

OS details: Linux 3.5

Uptime guess: 7.476 days (since Sat Apr 17 02:54:05 2021)

Network Distance: 1 hop

TCP Sequence Prediction: Difficulty=261 (Good luck!)

IP ID Sequence Generation: All zeros



TRACEROUTE (using port 993/tcp)

HOP RTT     ADDRESS

1   2.00 ms dsl-189-224-104-189-dyn.prod-infinitum.com.mx (189.224.104.189)



NSE: Script Post-scanning.

Initiating NSE at 14:19

Completed NSE at 14:19, 0.00s elapsed

Initiating NSE at 14:19

Completed NSE at 14:19, 0.00s elapsed

Initiating NSE at 14:19

Completed NSE at 14:19, 0.00s elapsed

Read data files from: C:\Program Files (x86)\Nmap

OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .

Nmap done: 1 IP address (1 host up) scanned in 37.59 seconds

           Raw packets sent: 1043 (47.586KB) | Rcvd: 5057 (202.860KB)

